buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        jcenter()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.0.128'
        classpath 'pokechu22.test.begradle:begradle:0.2.0-SNAPSHOT:fg3'
    }
}

apply plugin: 'java'

version = "4.0.4.1-SNAPSHOT"
group = "wdl"
archivesBaseName = "WorldDownloader"
libsDirName = "../../libs/${version}"


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
//apply plugin: 'pokechu22.test.begradle'
//apply plugin: 'pokechu22.test.customsrg'
//apply plugin: 'pokechu22.test.langrenamer'
//apply plugin: 'pokechu22.test.noinplacereobf'

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:2.22.0'
    // Make sure that we have the Minecraft deps, at the correct versions
    // testCompile configurations.forgeGradleMcDeps
}

minecraft {
    //suppressMappingVersionWarnings = true
    mappings channel: 'snapshot', version: '20190518-1.13.2'
    runs {
        client {
            workingDirectory project.file('run')
        }
    }

    // We don't currently want a source jar (doesn't work well for base edits, and the version info doesn't work yet)
    /*makeObfSourceJar = false
    // 1.13's json language files
    ext.jsonLangFiles = true
    // Copy one language to its variants
    ext.langMap = [
        'es_es': ['es_ar', 'es_cl', 'es_mx', 'es_uy', 'es_ve'],
        'fr_fr': ['fr_ca']
    ]*/
}

dependencies {
    minecraft 'net.minecraft:client:1.14:extra'
    compileOnly "com.mojang:patchy:1.1"
    compileOnly "oshi-project:oshi-core:1.1"
    compileOnly "net.java.dev.jna:jna:4.4.0"
    compileOnly "net.java.dev.jna:platform:3.4.0"
    compileOnly "com.ibm.icu:icu4j-core-mojang:51.2"
    compileOnly "com.mojang:javabridge:1.0.22"
    compileOnly "net.sf.jopt-simple:jopt-simple:5.0.3"
    compileOnly "io.netty:netty-all:4.1.25.Final"
    compileOnly "com.google.guava:guava:21.0"
    compileOnly "org.apache.commons:commons-lang3:3.5"
    compileOnly "commons-io:commons-io:2.5"
    compileOnly "commons-codec:commons-codec:1.10"
    compileOnly "net.java.jinput:jinput:2.0.5"
    compileOnly "net.java.jutils:jutils:1.0.0"
    compileOnly "com.mojang:brigadier:1.0.17"
    compileOnly "com.mojang:datafixerupper:2.0.24"
    compileOnly "com.google.code.gson:gson:2.8.0"
    compileOnly "com.mojang:authlib:1.5.25"
    compileOnly "org.apache.commons:commons-compress:1.8.1"
    compileOnly "org.apache.httpcomponents:httpclient:4.3.3"
    compileOnly "commons-logging:commons-logging:1.1.3"
    compileOnly "org.apache.httpcomponents:httpcore:4.3.2"
    compileOnly "it.unimi.dsi:fastutil:8.2.1"
    compileOnly "org.apache.logging.log4j:log4j-api:2.8.1"
    compileOnly "org.apache.logging.log4j:log4j-core:2.8.1"
    compileOnly "com.mojang:realms:1.14.14"
    compileOnly "org.lwjgl:lwjgl:3.2.1"
    compileOnly "org.lwjgl:lwjgl-jemalloc:3.2.1"
    compileOnly "org.lwjgl:lwjgl-openal:3.2.1"
    compileOnly "org.lwjgl:lwjgl-opengl:3.2.1"
    compileOnly "org.lwjgl:lwjgl-glfw:3.2.1"
    compileOnly "org.lwjgl:lwjgl-stb:3.2.1"
    compileOnly "com.mojang:text2speech:1.11.3"
    //compile 'net.minecraft:client:1.14:extra'
}


sourceSets {
    main {
        java {
            srcDir "src/main/java"
            srcDir project(':share').file("src/main/java")
            exclude "wdl/StandardEntityManagers_1_10.java"
            exclude "wdl/StandardEntityManagers_1_12.java"
            exclude "wdl/StandardEntityManagers_1_13.java"
            exclude "wdl/WDLChunkLoader_1_12.java"
            exclude "wdl/handler/block/BaseLargeChestHandler_1_12.java"
            exclude "wdl/handler/blockaction/NoteBlockHandler.java"
            exclude "wdl/versioned/GameRules_1_12.java"
            exclude "wdl/versioned/Generator_1_12.java"
            exclude "wdl/versioned/Gui_1_11.java"
            exclude "wdl/versioned/Gui_1_12.java"
            exclude "wdl/versioned/Handlers_1_9_2.java"
            exclude "wdl/versioned/Handlers_1_10.java"
            exclude "wdl/versioned/Handlers_1_12.java"
            exclude "wdl/versioned/Maps_1_12.java"
            exclude "wdl/versioned/Maps_1_13.java"
            exclude "wdl/versioned/Packets_1_12.java"
            exclude "wdl/versioned/Registries_1_12.java"
            exclude "wdl/versioned/Types_1_9_2.java"
            exclude "wdl/versioned/Types_1_12.java"
            exclude "wdl/versioned/Types_1_13.java"
            exclude "wdl/versioned/Types_1_13_1.java"
            exclude "wdl/gui/widget/ExtButton_1_11.java"
            exclude "wdl/gui/widget/ExtButton_1_12.java"
            exclude "wdl/gui/widget/ExtGuiList_1_11.java"
            exclude "wdl/gui/widget/ExtGuiList_1_12.java"
            exclude "wdl/gui/widget/ExtGuiScreen_1_9.java"
            exclude "wdl/gui/widget/ExtGuiScreen_1_12.java"
        }
        resources {
            srcDir project(':share').file("src/main/resources")
        }
        /*base {
            baseClasses = [
                // Main hooks
                "net.minecraft.client.gui.screen.IngameMenuScreen",
                "net.minecraft.client.world.ClientWorld",
                "net.minecraft.client.network.play.ClientPlayNetHandler",
                "net.minecraft.inventory.Inventory",
                // Auxiliary hooks, only needed for the base edit
                "net.minecraft.crash.CrashReport",
                "net.minecraft.client.ClientBrandRetriever",
                "net.minecraft.client.resources.VirtualAssetsPack"
            ]
        }*/
    }
    test {
        java {
            srcDir project(':share').file("src/test/java")
            exclude "wdl/MixinTest**.java"
            exclude "wdl/NoMixinTest_1_9.java"
            exclude "wdl/NoMixinTest_1_10.java"
            exclude "wdl/NoMixinTest_1_11.java"
            exclude "wdl/NoMixinTest_1_12.java"
            exclude "wdl/ExtWorld_1_10.java"
            exclude "wdl/ExtWorld_1_12.java"
            exclude "wdl/ExtWorld_1_13.java"
            exclude "wdl/handler/block/TrappedChestTest_1_12.java"
            exclude "wdl/handler/blockaction/NoteBlockTest.java"
            exclude "wdl/lwts/WDLTestTweaker_1_9.java"
            exclude "wdl/lwts/WDLTestTweaker_1_10.java"
            exclude "wdl/lwts/WDLTestTweaker.java"
        }
    }
    api {
        java {
            srcDir project(':share').file("src/api/java")
        }
    }
}
// We want Java 8 where possible
tasks.withType(JavaCompile) { javaTask ->
    javaTask.sourceCompatibility = "1.8"
    javaTask.targetCompatibility = "1.8"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

// Use tabs instead of spaces
/*fixMcSources {
    astyleConfig = "../astyle.cfg"
}*/

// Ensure that the API code is in the jar
jar {
    from sourceSets.api.output
}
